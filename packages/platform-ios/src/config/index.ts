/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

import path from 'path';
import {memoize} from 'lodash';
import findProject from './findProject';
import findPodfilePath from './findPodfilePath';
import findPodspec from './findPodspec';
import {
  IOSProjectParams,
  IOSDependencyParams,
} from '@react-native-community/cli-types';
import {logger} from '@react-native-community/cli-tools';

const memoizedFindProject = memoize(findProject);

/**
 * Returns project config by analyzing given folder and applying some user defaults
 * when constructing final object
 */
export function projectConfig(folder: string, userConfig: IOSProjectParams) {
  if (!userConfig) {
    return;
  }
  const project = userConfig.project || memoizedFindProject(folder);

  /**
   * No iOS config found here
   */
  if (!project) {
    return null;
  }

  const projectPath = path.join(folder, project);
  const podfile = findPodfilePath(folder, projectPath);

  // This is a temporary fix for #1435. In certain repos, the Xcode project can
  // be generated by a tool. The only file that we can assume to exist on disk
  // is `Podfile`.
  const sourceDir = podfile ? path.dirname(podfile) : path.dirname(projectPath);

  return {
    sourceDir,
  };
}

export function dependencyConfig(
  folder: string,
  userConfig: IOSDependencyParams,
) {
  if (userConfig.podspecPath) {
    logger.warn(`
      A podspec should always be at the root of a package and have the name of the package.
      This property will be removed in a future major version.
    `);
  }
  return {
    podspecPath: userConfig.podspecPath || findPodspec(folder),
    configurations: userConfig.configurations || [],
    scriptPhases: userConfig.scriptPhases || [],
  };
}
